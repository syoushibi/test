<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 和绑定的接口全类名对应 -->
<mapper namespace="com.nakamura.mapper.StudentMapper">
	<!-- 
		id和接口的方法名对应
		resultType:返回结果集 
		要mybatis自动帮你吧查询得到的数据装好 的前提是
		mysql中的字段的名称和java中类的属性名称全部一样数据类型一样 他就会自动装好
		这个叫做自动装配 
	 -->
	<select id="findStudentAll" resultType="com.nakamura.bean.Student" >
		SELECT * FROM Student
	</select>

	<select id="findStudentById" parameterType="int" resultType="com.nakamura.bean.Student">
		SELECT * FROM student WHERE id = #{id}
	</select>

	<insert id="addStudent" parameterType="com.nakamura.bean.Student">
		INSERT INTO student (name,score,created) VALUE (#{name},#{score},#{created})
	</insert>
	
	<delete id="deleteStudent"  >
		DELETE FROM student WHERE id = #{id}
	</delete>
	
	<update id="updateStudent" parameterType="com.nakamura.bean.Student">
		UPDATE student SET name=#{name},score=#{score},created=#{created} WHERE id = #{id}
	</update>
	
	<select id="findLikeByUserName" parameterType="string" resultType="com.nakamura.bean.Student">
		SELECT * FROM student WHERE name LIKE "%${value}%"
	</select>
	
	<select id="findStudentBySearch" parameterType="com.nakamura.bean.Student" resultType="com.nakamura.bean.Student">
		SELECT * FROM student
		<where>
			<if test="name!=null">
				AND name LIKE "%${name}%"
			</if>
			<if test="score!=null">
				AND score=#{score}
			</if>
		</where>
	</select>
	
	<delete id="deleteStudentSelet">
		DELETE FROM student 
		<where>
			<if test="ids!=null and ids.size>0">
				<foreach collection="ids" open="id in(" close=")" item="id" separator=",">
					#{id}
				</foreach>
			</if>
		</where>
	</delete>
</mapper>
